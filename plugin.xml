<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>

<!--
-->

<plugin>

   <extension point="org.eclipse.emf.ecore.generated_package">
      <!-- @generated yawlnet -->
      <package
            uri="http://compute.dtu.dk/mbse/groupdpetrinet"
            class="yawlnet.yawltypes.YawltypesPackage"
            genModel="model/yawlnet.genmodel"/>
   </extension>

	<extension
   id="dk.dtu.mbse.groupd.yawl.yawlnet"
   name="YAWL Nets"
   point="org.pnml.tools.epnk.pntd">
   <type
      class="yawlnet.yawltypes.impl.YAWLnetImpl"
      description="Text explaining what this net type is" />
	</extension>
	
	   <extension
         point="org.eclipse.emf.validation.constraintProviders">
      <constraintProvider
            cache="true">
         <package
               namespaceUri="http://compute.dtu.dk/mbse/groupdpetrinet">
         </package>
         <constraints categories="org.pnml.tools.epnk.validation">
            <constraint
                  id="dk.dtu.compute.mbse.yawl.validation.correct-arc-connection"
                  lang="OCL"
                  mode="Live"
                  name="Arc connection constraint for YAWL nets"
                  severity="ERROR"
                  statusCode="401">
               <message>
                  The arc {0} with this arc type is not allowed between these elements.
               </message>
               <description>
                  Arcs must be between a place and a transition, a transition and a place, or
                  between two transitions. Only arcs between a place and a transition may have
                  a type! 
               </description>
               <target
                     class="Arc:http://compute.dtu.dk/mbse/groupdpetrinet">
                  <!-- since this is a live constraint, you need to refer to tell the
                       validator when to check the constraint: in terms of events here
                       we use set events on the following features -->
                  <event
                        name="Set">
                     <feature
                           name="source">
                     </feature>
                     <feature
                           name="target">
                     </feature>
                     <feature
                           name="type">
                     </feature>
                  </event>
               </target>
               <!-- The actual OCL constraint follows
               
                    TODO you might need to change self.type->size() which says that
                    you cannot set the type of an arc for arcs running from a tarnsition
                    to a place -->
               <![CDATA[
                 ( self.source.oclIsKindOf(pnmlcoremodel::PlaceNode) and
                   self.target.oclIsKindOf(pnmlcoremodel::TransitionNode) )
                 or
                 ( self.source.oclIsKindOf(pnmlcoremodel::TransitionNode) and
                   self.target.oclIsKindOf(pnmlcoremodel::PlaceNode) and
                   self.type->size() = 0 )
               ]]>
            </constraint>
         </constraints>
      </constraintProvider>
   </extension>
   
   <extension
         point="org.eclipse.emf.validation.constraintProviders">
      <constraintProvider
            cache="true">
         <package
               namespaceUri="http://compute.dtu.dk/mbse/groupdpetrinet">
         </package>
         <constraints categories="org.pnml.tools.epnk.validation">
            <!--  OCL constraint from 1. 
               ...
            -->
            <!-- TODO class attribute of the constraint should be the fully qualified name
                      of the class implementing the Java constraint, checking start and
                      end places -->
            <constraint
                  lang="Java"
                  class="yawlnet.yawltypes.StartEndConditions"
                  severity="ERROR"
                  mode="Batch"
                  name="One start and end place"
                  id="dk.dtu.compute.mbse.yawl.validation.one-start-and-end-place"
                  statusCode="402">
               <!-- TODO the class here needs to refer to Ecore class of the YAWL Petri net type
                    (name and URI of the package separated by a colon) -->
               <target class="YAWLnet:http://compute.dtu.dk/mbse/groupdpetrinet"/>
               <description>
                  A YAWL net must have one start and end place.
               </description>
               <message>
                  {0}
               </message>
            </constraint>
         </constraints>
      </constraintProvider>
   </extension>

</plugin>


